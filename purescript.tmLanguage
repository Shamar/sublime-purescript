<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>purs</string>
	</array>
	<key>name</key>
	<string>PureScript</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>^\s*\b(module)\b</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.purescript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\b(where)\b</string>
			<key>name</key>
			<string>meta.section.module.purescript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#module-name</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(import)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.purescript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>meta.declaration.import.purescript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#module-name</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*\b(type)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.purescript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>meta.declaration.type.purescript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type-simple</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*\b(class)\b</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.purescript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\b(where)\b|$</string>
			<key>name</key>
			<string>meta.declaration.typeclass.purescript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>([A-Z][\w.']*)</string>
					<key>name</key>
					<string>entity.other.inherited-class.purescript</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-typeclass</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic-tyvar</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*\b(instance)\b</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.purescript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\b(where)\b|$</string>
			<key>name</key>
			<string>meta.declaration.instance.purescript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type-signature</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(\w+|\(.+\))\s*(::)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.purescript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.has-type.purescript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>meta.declaration.function.purescript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type-signature</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\s*(foreign)\s+(import)\s+(.+?)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.purescript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.purescript</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.ffi.purescript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\s*(::)(.+?)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>substringkeyword.operator.purescript</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.declaration.ffi.function.purescript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ffi</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#reserveds</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constants</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#prelude</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#data-ctor</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\-\-.*</string>
					<key>name</key>
					<string>comment.line.purescript</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{\-</string>
					<key>end</key>
					<string>\-\}</string>
					<key>name</key>
					<string>comment.block.purescript</string>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>match</key>
			<string>\b(true|false)\b</string>
			<key>name</key>
			<string>constant.language.purescript</string>
		</dict>
		<key>data-ctor</key>
		<dict>
			<key>match</key>
			<string>\b([A-Z]\w*)\b</string>
			<key>name</key>
			<string>constant.other.purescript</string>
		</dict>
		<key>decl-ctor</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.purescript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.other.purescript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s*([A-Z][\w\.]*?)\s+([A-Z][\w\.]*)\s*</string>
		</dict>
		<key>ffi</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>end</key>
					<string>"</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.js</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>generic-tyvar</key>
		<dict>
			<key>match</key>
			<string>\b([a-z][\w']*)\b</string>
			<key>name</key>
			<string>variable.other.purescript</string>
		</dict>
		<key>module-name</key>
		<dict>
			<key>match</key>
			<string>([A-Za-z][\w\.']*)</string>
			<key>name</key>
			<string>support.other.module.purescript</string>
		</dict>
		<key>prelude</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#prelude-data</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-function</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-op</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-typeclass</string>
				</dict>
			</array>
		</dict>
		<key>prelude-data</key>
		<dict>
			<key>match</key>
			<string>\b(Just|Left|Nothing|Right)\b</string>
			<key>name</key>
			<string>support.function.data-ctor.prelude.purescript</string>
		</dict>
		<key>prelude-function</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(const|flip)\b</string>
					<key>name</key>
					<string>support.function.prelude.purescript</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-function-alternative</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-function-applicative</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-function-bits</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-function-boollike</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-function-category</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-function-monad</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-function-num</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-function-ord</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-function-read</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-function-ref</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-function-show</string>
				</dict>
			</array>
		</dict>
		<key>prelude-function-alternative</key>
		<dict>
			<key>match</key>
			<string>\b(empty)\b</string>
			<key>name</key>
			<string>support.function.prelude.alternative.purescript</string>
		</dict>
		<key>prelude-function-applicative</key>
		<dict>
			<key>match</key>
			<string>\b(pure)\b</string>
			<key>name</key>
			<string>support.function.prelude.applicative.purescript</string>
		</dict>
		<key>prelude-function-bits</key>
		<dict>
			<key>match</key>
			<string>\b(complement|shl|shr|numAnd|numComplement|numOr|numShl|numShr|numXor|numZshr|zshr)\b</string>
			<key>name</key>
			<string>support.function.prelude.bits.purescript</string>
		</dict>
		<key>prelude-function-boollike</key>
		<dict>
			<key>match</key>
			<string>\b(boolAnd|boolNot|boolOr|not)\b</string>
			<key>name</key>
			<string>support.function.prelude.boollike.purescript</string>
		</dict>
		<key>prelude-function-category</key>
		<dict>
			<key>match</key>
			<string>\b(id)\b</string>
			<key>name</key>
			<string>support.function.prelude.category.purescript</string>
		</dict>
		<key>prelude-function-monad</key>
		<dict>
			<key>match</key>
			<string>\b(return)\b</string>
			<key>name</key>
			<string>support.function.prelude.monad.purescript</string>
		</dict>
		<key>prelude-function-num</key>
		<dict>
			<key>match</key>
			<string>\b(negate|numAdd|numDiv|numMod|numMul|numNegate|numSub)\b</string>
			<key>name</key>
			<string>support.function.prelude.num.purescript</string>
		</dict>
		<key>prelude-function-ord</key>
		<dict>
			<key>match</key>
			<string>\b(numLess|numLessEq|numGreater|numGreaterEq)\b</string>
			<key>name</key>
			<string>support.function.prelude.ord.purescript</string>
		</dict>
		<key>prelude-function-read</key>
		<dict>
			<key>match</key>
			<string>\b(read|readNumber)\b</string>
			<key>name</key>
			<string>support.function.prelude.read.purescript</string>
		</dict>
		<key>prelude-function-ref</key>
		<dict>
			<key>match</key>
			<string>\b(liftRef|refEq|refIneq|unsafeRefEq|unsafeRefIneq)\b</string>
			<key>name</key>
			<string>support.function.prelude.ref.purescript</string>
		</dict>
		<key>prelude-function-show</key>
		<dict>
			<key>match</key>
			<string>\b(show|showNumber)\b</string>
			<key>name</key>
			<string>support.function.prelude.show.purescript</string>
		</dict>
		<key>prelude-op</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\$|#)</string>
					<key>name</key>
					<string>support.type.op.prelude.purescript</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-op-alternative</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-op-applicative</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-op-bits</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-op-boollike</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-op-category</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-op-eq</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-op-functor</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-op-monad</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-op-num</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prelude-op-ord</string>
				</dict>
			</array>
		</dict>
		<key>prelude-op-alternative</key>
		<dict>
			<key>match</key>
			<string>(&lt;\|&gt;)</string>
			<key>name</key>
			<string>support.type.op.prelude.alternative.purescript</string>
		</dict>
		<key>prelude-op-applicative</key>
		<dict>
			<key>match</key>
			<string>(&lt;\*&gt;)</string>
			<key>name</key>
			<string>support.type.op.prelude.applicative.purescript</string>
		</dict>
		<key>prelude-op-bits</key>
		<dict>
			<key>match</key>
			<string>(&amp;|\||\^)</string>
			<key>name</key>
			<string>support.type.op.prelude.bits.purescript</string>
		</dict>
		<key>prelude-op-boollike</key>
		<dict>
			<key>match</key>
			<string>(&amp;&amp;|\|\||\^)</string>
			<key>name</key>
			<string>support.type.op.prelude.boollike.purescript</string>
		</dict>
		<key>prelude-op-category</key>
		<dict>
			<key>match</key>
			<string>(&lt;&lt;&lt;|&gt;&gt;&gt;)</string>
			<key>name</key>
			<string>support.type.op.prelude.category.purescript</string>
		</dict>
		<key>prelude-op-eq</key>
		<dict>
			<key>match</key>
			<string>(==|/=)</string>
			<key>name</key>
			<string>support.type.op.prelude.eq.purescript</string>
		</dict>
		<key>prelude-op-functor</key>
		<dict>
			<key>match</key>
			<string>(&lt;\$&gt;)</string>
			<key>name</key>
			<string>support.type.op.prelude.functor.purescript</string>
		</dict>
		<key>prelude-op-monad</key>
		<dict>
			<key>match</key>
			<string>(&gt;&gt;=)</string>
			<key>name</key>
			<string>support.type.op.prelude.monad.purescript</string>
		</dict>
		<key>prelude-op-num</key>
		<dict>
			<key>match</key>
			<string>(\+|\-|\*|/|%)</string>
			<key>name</key>
			<string>support.type.op.prelude.num.purescript</string>
		</dict>
		<key>prelude-op-ord</key>
		<dict>
			<key>match</key>
			<string>(&lt;|&lt;=|&gt;|&gt;=)</string>
			<key>name</key>
			<string>support.type.op.prelude.ord.purescript</string>
		</dict>
		<key>prelude-type</key>
		<dict>
			<key>match</key>
			<string>\b(Boolean|Number|String)\b</string>
			<key>name</key>
			<string>support.type.prelude.purescript</string>
		</dict>
		<key>prelude-typeclass</key>
		<dict>
			<key>match</key>
			<string>\b(Alternative|Applicative|Bits|BoolLike|Category|Either|Eq|Functor|Maybe|Monad|Num|Ord|Read|Show)\b</string>
			<key>name</key>
			<string>storage.type.prelude.purescript</string>
		</dict>
		<key>reserveds</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(case|do|else|if|in|let|of|then|until)\b</string>
					<key>name</key>
					<string>keyword.control.purescript</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(class|data|forall|foreign|import|infixl|infixr|instance|module|type|where)\b</string>
					<key>name</key>
					<string>keyword.other.purescript</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=&gt;|\-&gt;|=|\.|\\</string>
					<key>name</key>
					<string>keyword.operator.purescript</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.string.purescript</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\s+((')'?('))</string>
					<key>name</key>
					<string>invalid-strings</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.purescript</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.character.escape.purescript</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.purescript</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(')(.|(\\.))(')</string>
					<key>name</key>
					<string>string.quoted.single.purescript</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.purescript</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.purescript</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\").*(\")</string>
					<key>name</key>
					<string>string.quoted.double.purescript</string>
				</dict>
			</array>
		</dict>
		<key>type-entailment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.inherited-class.purescript</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.purescript</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.purescript</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.purescript</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\s*([A-Z][\w.']*)\s+([a-z][\w.']*)\s*(=&gt;)</string>
					<key>name</key>
					<string>meta.entailment.purescript</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=.*=&gt;)\(</string>
					<key>end</key>
					<string>\)\s*(=&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.purescript</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.entailment.purescript</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.other.inherited-class.purescript</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.other.purescript</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\s*([A-Z][\w.']*)\s+([a-z][\w.']*)\s*</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>type-signature</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type-simple</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-entailment</string>
				</dict>
			</array>
		</dict>
		<key>type-simple</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.purescript</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.purescript</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\((-&gt;)\)|(-&gt;)</string>
					<key>name</key>
					<string>arrow.operator.purescript</string>
				</dict>
				<dict>
					<key>match</key>
					<string>([A-Z][\w.']*)</string>
					<key>name</key>
					<string>storage.type.purescript</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic-tyvar</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.purescript</string>
	<key>uuid</key>
	<string>a2569d0d-e592-4873-9488-e0b8d894ac3e</string>
</dict>
</plist>
